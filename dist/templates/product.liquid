<!-- /templates/product.liquid -->

{% section 'template-product' %}
<script>
// A simple example of image switching using the variantImageChange event and concrete's images tools.

$(document).on('variantImageChange', function(event) {
  // Lets get the old image
  var oldSrc = $('#ProductPhoto img').attr('src');
  // Find out the size of the old image
  var oldSize = concrete.Images.imageSize(oldSrc);
  // Lets get the new image at the correct size
  var newImage = concrete.Images.getImageUrl(event.variant.featured_image.src, oldSize)
  // Change to the new variants image
  $('#ProductPhoto img').attr('src', newImage);
  console.log('Imaged Changed');
});

$(document).ready(function(){
  $('#ProductThumbs img').click(function(e){
    concrete.Images.switchImage($('#ProductPhoto img')[0], $(this, e.target)[0]);
    {% unless product.type == 'Gift Card' %}
      $('#ProductFeaturedImage').attr('data-zoom-image', $(this).attr('src'));
      $("#ProductFeaturedImage").myElevateZoom();
    {% endunless %}
  });
});

if($(window).width() < 601){
  $('#ProductThumbs ul').slick({
    arrows: false,
    adaptiveHeight: true
  });
}

if($(window).width() < 600){
  var descriptionHeight = $('.description-row').height() + 135;
  $('.description-row').css('max-height','250px');

  $('.description-row .show-more').click(function(){
    var currentHeight = $('.description-row').css('max-height');
    if(currentHeight == '250px'){
      $('.description-row').css('max-height', descriptionHeight+'px');
      $(this).text('Show Less');
      $('.description-row').addClass('active');
    }else{
      $('.description-row').css('max-height', '250px');
      $(this).text('Show More');
      $('.description-row').removeClass('active');
    }
  });
}


//Size Guides
$('#SizeGuideTrigger').click(function(){
  if($(window).width() > 850){
    $('body').addClass('fixed');
    $('.size-chart-wrapper, .size-chart').addClass('active');
    $('.unit-controls .imperial').trigger('click');
  }else{
    window.open('/pages/'+$(this).attr('data-page-handle'), '_blank');
  }
});

$('.size-chart-wrapper').click(function(){
  $('body').removeClass('fixed');
  $('.size-chart-wrapper, .size-chart').removeClass('active');
});


$('.unit-controls .unit-control').click(function(){
  if(!$(this).hasClass('selected')){
    var unit = $(this).attr('data-unit');
    
    //Handles Button State 
    if(unit =='metric'){
      $('.unit-controls .imperial').removeClass('selected');
    }else{
      $('.unit-controls .metric').removeClass('selected');
    }
    $(this).addClass('selected');

    //Conversion Functions
    function cmToIn(cm){
      return Math.round(cm*0.39370);
    }
    function inToCm(inches){
      return Math.round(inches/0.39370);
    }
    
    function lbToKg(lb){
      return Math.round(10*(lb/2.2046))/10;
    }

    function kgToLb(kg){
      return Math.round(10*kg*2.2046)/10;
    }
    //Array of which attributes to convert
    var lengthAttrArray = ['Height', 'Bust','Waist','Hips','Chest','General Inseam'];
    var weightAttrArray = ['Weight'];

    var lengthColumnPositions = [];
    var weightColumnsPositions = [];

    //Gets the column position of the column we need to convert the length and appends to the array
    $('.size-chart tr:first-child td').each(function(index){
      var currentAttribute = $(this).text();
      if(lengthAttrArray.indexOf(currentAttribute) > -1){
        lengthColumnPositions.push(index+1);
      }
      if(weightAttrArray.indexOf(currentAttribute) > -1){
        weightColumnsPositions.push(index+1);
      }
    });
    
    //Goes through each column and converts each value except for the headings
    lengthColumnPositions.forEach(function(position){
      $('.size-chart tr:not(:first-child) td:nth-child('+position+')').each(function(){
        var currentUnitValue = $(this).text();
        if(currentUnitValue.indexOf('-') > -1){
          currentUnitValue = currentUnitValue.split('-');
          currentUnitValue = currentUnitValue.map(function(value){
            return parseInt(value);
          });
          if(unit =='metric'){
            $(this).text(inToCm(currentUnitValue[0])+'-'+inToCm(currentUnitValue[1]));
          }else{
            $(this).text(cmToIn(currentUnitValue[0])+'-'+cmToIn(currentUnitValue[1]));
          }          
        }else{
          currentUnitValue = parseInt(currentUnitValue);
          if(unit =='metric'){
            $(this).text(inToCm(currentUnitValue));
          }else{
            $(this).text(cmToIn(currentUnitValue));
          }
        }
      });
    });
    //If there is a second table we know it is the womens chart so we will manually target the general inseam column
    var tables = $('table');
    if(tables.length > 1){
      $('.size-chart table:last-child tr:not(:first-child) td:nth-child(2)').each(function(){
        var currentUnitValue = $(this).text();
        currentUnitValue = currentUnitValue.split('-');
        currentUnitValue = currentUnitValue.map(function(value){
          return parseInt(value);
        });
        if(unit =='metric'){
          $(this).text(inToCm(currentUnitValue[0])+'-'+inToCm(currentUnitValue[1]));
        }else{
          $(this).text(cmToIn(currentUnitValue[0])+'-'+cmToIn(currentUnitValue[1]));
        }          
      });
    }

    weightColumnsPositions.forEach(function(position){
      $('.size-chart tr:not(:first-child) td:nth-child('+position+')').each(function(){
        var currentUnitValue = $(this).text();
        if(currentUnitValue.indexOf('-') > -1){
          currentUnitValue = currentUnitValue.split('-');
          currentUnitValue = currentUnitValue.map(function(value){
            return parseInt(value);
          });
          if(unit =='metric'){
            $(this).text(lbToKg(currentUnitValue[0])+'-'+lbToKg(currentUnitValue[1]));
          }else{
            $(this).text(kgToLb(currentUnitValue[0])+'-'+kgToLb(currentUnitValue[1]));
          }          
        }else{
          currentUnitValue = parseInt(currentUnitValue);
          if(unit =='metric'){
            $(this).text(lbToKg(currentUnitValue));
          }else{
            $(this).text(kgToLb(currentUnitValue));
          }
        }
      });
    });
  }
});

$.fn.myElevateZoom = function () {
  $(this).removeData('elevateZoom');
  $(this).removeData('zoomImage');
  $('.zoomContainer').remove();

  $(this).elevateZoom({
    gallery : "ProductThumbs",
    galleryActiveClass: "active",
    zoomType:'inner',
    scrollZoom: true,
    responsive: true, 
    zoomWindowFadeIn: 500,
    zoomWindowFadeOut: 750
  });

};
{% unless product.type == 'Gift Card' %}
  $("#ProductFeaturedImage").myElevateZoom();
{% endunless %}

</script>

<script type="application/json" id="ProductJson">
 {{ product | json }}
</script>
